generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                Int               @id @default(autoincrement())
  email             String            @unique
  name              String
  role              RoleEnum
  password          String
  googleId          String?
  avatar            String?
  Adoption          Adoption[]
  arbol             Arbol[]
  shippingAddresses ShippingAddress[]
}

model ShippingAddress {
  id          Int        @id @default(autoincrement())
  userId      Int
  fullName    String
  address     String
  city        String
  province    String
  postalCode  String
  country     String
  phoneNumber String
  Adoption    Adoption[]
  user        User       @relation(fields: [userId], references: [id])
}

model Arbol {
  id         Int            @id @default(autoincrement())
  type       String
  statusTree StatusTreeEnum
  fincaId    Int            @default(1)
  userId     Int
  active     Boolean?       @default(true)
  images     String[]
  price      String         @default("default_price")
  Adoption   Adoption[]
  finca      Finca          @relation(fields: [fincaId], references: [id], onDelete: Cascade)
  user       User           @relation(fields: [userId], references: [id])
  cosecha    Cosecha[]
}

model Finca {
  id                   Int      @id @default(autoincrement())
  name                 String
  ubication            String
  practicesSustainable String
  images               String[]
  productor            String   @default("default_productor")
  arbol                Arbol[]
}

model Cosecha {
  id            Int               @id @default(autoincrement())
  arbolId       Int
  cantidad      Int
  fechaDeEnvio  DateTime
  estadoDeEnvio EstadoDeEnvioEnum
  arbol         Arbol             @relation(fields: [arbolId], references: [id])
}

model Adoption {
  id                Int             @id @default(autoincrement())
  userId            Int
  treeId            Int
  purchaseDate      DateTime
  shippingAddressId Int
  shippingAddress   ShippingAddress @relation(fields: [shippingAddressId], references: [id])
  tree              Arbol           @relation(fields: [treeId], references: [id])
  user              User            @relation(fields: [userId], references: [id])
  status            AdoptionStatusEnum @default(PENDING)
}

enum AdoptionStatusEnum {
  PENDING
  COMPLETED
  CANCELED
}

enum RoleEnum {
  ADMIN
  USER
}

enum StatusTreeEnum {
  SEMILLA
  PLANTULA
  ARBOLITO
  ARBOL_JOVEN
  ARBOL_MADURO
  ARBOL_VIEJO
  ARBOL_SECO
  ARBOL_MUERTO
}

enum EstadoDeEnvioEnum {
  EN_PREPARACION
  DESPACHADO
  EN_CAMINO
  ENTREGADO
}
